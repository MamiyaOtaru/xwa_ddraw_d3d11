; Main setting to enable/disable the SSAO. You can also press Ctrl+Alt+O in-game
; to toggle the effect.
; To reload this config file in-flight, just press Ctrl+Alt+L (be aware that
; all key shortcuts are disabled in the hangar, though).
ssao_enabled = 1

; Experimental setting: if you see areas of the HUD go white, disable this setting
; SSAO/SSDO/Deferred shading are all supposed to replace XWA's shading system.
; For the best performance, you should disable XWA's diffuse lights; but you
; can also enable the following setting to force the shaders to ignore XWA's
; diffuse component. This setting has no effect in the Tech Room.
disable_xwa_diffuse = 0

; Select either "Ambient" for regular Ambient Occlusion or
; "Directional" for SSDO (Screen-Space Directional Occlusion).
; "Deferred" for regular deferred shading (New Shading Model without ambient occlusion).
;ssao_type = Ambient
ssao_type = Directional
;ssao_type = Deferred

;ssao_type = Bent_Normals

; Number of samples. The higher the count, the higher the quality (but lower
; performance). Changing the number of samples also affects how dark SSAO/SSDO looks,
; so always start by fixing the number of samples before tinkering with the rest
; of the parameters.
samples = 16 ; The number of samples also increases the spread of SSDO, for some reason

; Distance in meters where the effect will be cut off. Only objects that are within
; this distance will occlude each other. Larger values will impact performance.
; This setting is also used by the depth-aware blur to prevent halos across edges.
max_dist = 150

; Controls the width of the occlusion cone considered by the occludee. A value
; of 0 makes a 90 deg "cone", i.e. it becomes a disk, allowing flat surfaces
; to self-occlude. A value of 1 makes a 0 degree cone, which essentially disables
; the effect. If you want to disable the effect use "ssao_enabled" instead.
; Here the recommendation is to use non-zero low values.
bias = 0.05

; The overall intensity of the SSAO/SSDO effect. Think of this as the "contrast"
; of the effect. A larger value will make whites whiter and black darker; a lower
; value will make everythink gray and dark.
intensity = 3.0

; The effect can be raised to a power to enhance the contrast. Setting it to
; values higher than 1 tends to make smaller and blacker patches. Values lower
; than 1 make larger black spots. Set it to 1.0 to disable it.
power = 4.0 ; ORIGINAL
;power = 1.0

; This defines the blackest level for the SSAO effect. 1 is white, 0 is fully
; black. This setting is ignored for SSDO
black_level = 0.2

; Sampling Radius for SSAO: Controls the spread of the effect. Bigger spreads have 
; higher performance impact but tend to look nicer, while a very small spread looks
; like an edge detector. 
; You can set two values for the radius. The far_sample_radius is applied
; at 4km+ away. These settings are resolution-dependent. The following settings
; look good at 3280x2160:
;near_sample_radius = 0.007 ; ORIGINAL
;near_sample_radius = 0.0025 ; Looks good for 16 samples
near_sample_radius = 0.005 ; Looks reasonably good for 16 samples
;near_sample_radius = 0.005
far_sample_radius = 0.0025


; These settings look good at 1920x1080:
;sample_radius = 0.0035
;near_sample_radius = 0.0035
;far_sample_radius = 0.00125

; Enable perspective-correct SSAO. This makes the settings work only on a narrow
; range of distances. In other words, if you enable this you'll either get SSAO
; on distant objects, or get it on close objects; but not on both at the same time.
perspective_correct = 0

; To speed up SSAO/SSDO (at the cost of quality) you may optionally ask the
; system to perform SSAO/SSDO on a buffer that is smaller than the screen
; size. Set the following parameter to "2" to perform SSAO/SSDO on a buffer
; that is half the size of the screen. Set it to "1" to keep the original
; screen size. You can also use fractional numbers like 1.5. 
; Never set it to 0.
ssao_buffer_scale_divisor = 1

; Set the following to 1 to blur the SSAO buffer (removes noise)
; I'm using Pascal Gilcher's pattern for sampling; and it's so good that it sometimes
; does not even need a blur to look good if enough samples are taken. Try disabling
; this setting to see if it looks good for you.
enable_blur = 1
; For SSDO you can have multiple blur passes at the cost of performance. However, I
; don't see much difference above 2 passes
blur_passes = 1

; This shader splits the player's craft/cockpit into its own SSAO buffer so
; that it doesn't occlude distant objects. If you want the regular SSAO you
; can disable it here.
; This feature is not supported in SSDO, set it to 0 or you'll see artifacts.
enable_dual_ssao = 0

; For objects with an alpha mask, the alpha is mapped to solid geometry when 
; rendering SSAO. However, this may cause a white halo around these objects.
; To prevent this, the following setting can optionally substract a small value
; to the alpha to soften the edges. If you set it to 0, these objects will no
; longer get SSAO.
alpha_to_solid_offset = 0.5

; Enable indirect lighting for SSDO. Right now there's a significant penalty in
; performance when this is enabled and the indirect lighting effect is subtle.
; If you want to use this anyway, I recommend that you set ssao_buffer_scale_divisor
; to 2 to compensate for the perfomance impact.
; This setting can also be toggled by pressing Ctrl+Alt+P while flying.
enable_indirect_ssdo = 0

; The intensity of the indirect lighting effect:
indirect_intensity = 3.5

; Due to the discretization of the depth buffer, sometimes you may see moire patterns
; on distant objects when running SSDO or self-occlusion with SSAO. Set it to 0 to 
; disable it (SSAO does not need this setting).
moire_offset = 0.02 ; SSDO
;moire_offset = 0.2 ; SSAO

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Specular shading settings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

specular_intensity = 0.5

; If the specular component is too bright, it will "spill out" as bloom. This setting
; controls the intensity of this "spillover bloom".
specular_bloom_intensity = 1.2

; Generic maximum glossiness of all surfaces
glossiness = 128.0

; Generic glossiness of the specular bloom. This value multiplies the "glossiness" setting
bloom_glossiness_multiplier = 3.0 

; The generic specular model creates a specular component automatically using
; the original color from the texture by boosting/decreasing its lightness and 
; saturation.
; Lightness should be numbers above 1 to increase the specular component. A value of
; 1 uses the original color for the specular component, and a value of 0 creates a
; matte look.
lightness_boost  = 8.0

; A saturation of 0 provides a white specular component, like plastic and wood.
; A saturation above 1 produces a metallic look.
;saturation_boost = 0.5
saturation_boost = 1.0

ss_debug = 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Normal Mapping Parameters for both SSAO and SSDO
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Enable fake normal mapping for both SSAO and SSDO. 
; Pascal Gilcher was gracious enough to share code from his SSR shader that
; helps enable normal mapping by using the current image as a bump map. This
; setting can also be toggled by pressing Ctrl+Alt+N while flying.
normal_mapping_enable = 1

; The intensity of the normal mapping effect can be modulated with distance. The far
; setting is applied at 4+ kms.
; nm_intensity_far and nm_intensity_near are resolution-dependent. You may have to
; adjust them to your specific setup. These settings look fine at 3280x2160
nm_intensity_near = 1.0
nm_intensity_far = 1.0

nm_scale = 0.03

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SSDO Lighting System Parameters
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SSDO is intended to be a full replacement of XWA's shading mechanism. The following
; settings configure the lighting system through SSDO.

; General Ambient Lighting value. Set this to a low value.
;ssdo_ambient = 0.05
ssdo_ambient = 0.075

; Two lights can now be specified. The following direction (usually) matches
; the direction of the sun:
light_vector = 0, 1, 0
;light_vector = 0, 0, -1
light_color = 1.0, 1.0, 1.0 ; Pure white

; Secondary light, try setting this one to lower values and in a different position
; from the above.
light_vector2 = 1, -1, 0
light_color2 = 0.15, 0.15, 0.25 ; Set this to 0,0,0 to disable this light.

; In SSDO, shadowed areas can optionally have a tint and it can be specified here:
; (Try using low values for this color, or set it to 0 to disable this).
;shadow_color = 0.2666, 0.2941, 0.3254
;shadow_color = 0, 0, 0

bent_normal_init = 0.1

;gamma = 1.25
;gamma = 2.2
;gamma = 4
HDR_enabled = 0
;HDR_enabled = 1

;ssdo_ambient = 0.25

;moire_offset = 0.0
;moire_offset = 0.02
;moire_offset = 0.005
;moire_offset = 0.01
;white_point = 150.0

; Inside the cockpit:
;moire_offset = 0.01
;shadow_step_size = 0.0025
;shadow_steps = 150

; Larger objects:
;moire_offset = 0.1
;max_dist = 50
;shadow_step_size = 0.1
;shadow_steps = 550

;shadow_enable = 1
;shadow_k = 2

; These settings work reasonably well for shadows:
;viewYawSign = -1
;viewPitchSign = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Internal/Debug -- Do Not Publish
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

key_set = 1
debug = 0
Bz_mult = 0.0025
;Bz_mult = 0.0
