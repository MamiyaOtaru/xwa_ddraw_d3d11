; The Dynamic Cockpit requires the hook_textures_tag.dll hook. 
; This project is now compatible with the 32-bit mode hook.
;
; This is a global-settings file. Set the following flag to 1 to enable the
; Dynamic Cockpit. Each individual cockpit must have its own *.dc file in the
; DynamicCockpit directory. The name of the file *must* match the name of the
; cockpit OPT. For instance, the DC configuration file for the XwingCockpit.opt
; file must be located in DynamicCockpit\XwingCockpit.dc
dynamic_cockpit_enabled = 1

; Each .DC file has an optional set of "erase_region" commands that erase specific
; HUD elements. To override these commands and show the full HUD even when DC is
; enabled you can set the following to 1.
; For VR and TrackIR modes, it is recommended to set this to 0.
HUD_visible_on_startup = 0

; You can optionally increase the brightness of the DC elements to make them
; easier to read. Set this value to 1 or more to increase the brightness:
dc_brightness = 1.0

; When the 32-bit mode hook is enabled, some cover textures become too bright.
; The setting below can be used to reduce the brightness of these cover textures.
; Set it to 1.0 when the 32-bit mode hook is disabled.
; Set it to 0.7 when the 32-bit mode hook is enabled.
;cover_texture_brightness = 0.6
cover_texture_brightness = 1

; Do NOT publish this setting to the general public. They don't need to know.
; The xwahacker FOV for most DC cockpits was designed for an aspect ratio of
; 1.778 or a resolution that is a multiple of 1920x1080. If you're using a
; different aspect ratio, you won't see all the DC elements. The following
; setting will compensate the FOV so that you get about the same visibility that
; was used when the cockpits were designed.
compensate_FOV_for_1920x1080 = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Wireframe CMD Settings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
enable_wireframe_CMD = 1

; The following are the default wireframe colors that are applied to the
; targetted craft. These colors can be overriden in individual cockpits through
; the .DC files. If a .DC file has a "wireframe_mesh_color", that will override
; all the colors set here.
; Rebel
wireframe_IFF_color_0 = 0.1, 0.7, 0.1
; Imperial
wireframe_IFF_color_1 = 0.5, 0.1, 0.1
; Neutral
wireframe_IFF_color_2 = 0.1, 0.1, 0.5
; Viraxo/Foe
wireframe_IFF_color_3 = 0.3, 0.2, 0.1
; Backdrop
wireframe_IFF_color_4 = 0.3, 0.3, 0.3
; Azzameen
wireframe_IFF_color_5 = 0.5, 0.1, 0.5

; The wireframe CMD is based on a edge detector that uses the luminance of the
; targeted object to determine the edges. I'm using a fast approximation
; to luminance that gives more weight to the green component, but you can change
; this vector as you wish. The format is: red, green, blue.
wireframe_luminance_vector = 0.33, 0.5, 0.16

; To make the edges in the wireframe display more visible, you can also increase
; the contrast with this setting.
wireframe_contrast = 3.0


; Some samples of how to move HUD regions:
; The format is:
; move_region = <REGION-NAME>, x0, y0, x1, y1
; Coordinates are normalized to the range 0..1, (0,0) is the top-left corner of your
; screen, (1,1) is the bottom-right corner. See the end of this document of valid
; HUD region names. You can only have a maximum of 8 move_region commands.


; These sample commands move all the regions a bit closer towards the center of the
; screen. This might help SteamVR users to get a more legible layout
;move_region = LEFT_SENSOR_REGION,  0.15,0.15,  0.30,0.30
;move_region = RIGHT_SENSOR_REGION, 0.70,0.15,  0.85,0.30

;move_region = SHIELDS_REGION, 0.15,0.30, 0.25,0.45
;move_region = BEAM_REGION,    0.75,0.30, 0.85,0.45

;move_region = TOP_LEFT_REGION, 0.30,0.15,  0.50,0.20
;move_region = TOP_RIGHT_REGION, 0.50,0.15,  0.70,0.20

;move_region = TARGET_AND_LASERS_REGION, 0.35,0.55,  0.65,0.90
;move_region = LEFT_TEXT_BOX_REGION, 0.15,0.55,  0.35,0.90
;move_region = RIGHT_TEXT_BOX_REGION, 0.65,0.55,  0.85,0.90


; Right now, the only commands that will be executed from this file are 
; "move_region" commands.


; The format to place HUD elements is:
;
; [Opt-name,Destination-texture-name]
; cover_texture = FileName
; cover_texture_size = width, height
; uv_coords1
; uv_coords2
; ...
; erase_region = N
; erase_region = M
; ...
;
; Where:
;
; Opt-name is the name of the Cockpit OPT file.
;
; Destination-texture-name is the name of the texture that will be replaced as seen in XwaOptEditor.
; See the examples below.
;
; cover_texture 
; (Optional) specifies the texture with transparency that will be used to cover the HUD.
; If this parameter is not specified, then the whole destination texture will be replaced with a HUD
; element. In some cases, this works because the OPT already has a nice frame around the destination
; texture. See the Assault Gunboat's targeting computer for an example.
;
; cover_texture_size = width, height
; The dimension (in pixels) of the cover texture. This command MUST be placed before any uv_coordinates.
; This element is *not* optional. If you're not using a cover texture, then this field specifies the
; dimensions of the destination texture you're replacing.
;
; uv_coords = source-slot-name; x0,y0, x1,y1 [; HexBackgroundColor ]
; Specifies the coordinates of a HUD element that will be copied from the screen (source slot) to the destination
; texture in the cockpit. See the notes below for valid source slot names.
; (x0,y0) is the top-left corner of the destination rectangle
; (x1,y1) is the bottom-right corner of the destination rectangle
; x0 may or may not be lower than x1, and the same applies for y0, y1. That way, you can mirror elements on each axis independently.
; HexBackgroundColor is the color of the background for this HUD element. This is optional; but if present it must
; be specified in hex format: 0xRRGGBB. The default color is dark blue if this item is omitted.
;
; erase_region = HUD-region-name
; (Optional) This command is used to erase HUD regions from the screen. See notes below for valid
; region names.
;
;
; Conditions:
;
; uv_coords must be grouped by texture.
; You can specify a maximum of 8 uv_coords and 8 erase_region commands per section.
;
;
; Be aware that certain OPTs have UV coordinates outside the range [0..1]. So, in some cases
; your destination coordinates may be "outside" the bounds set by dest-width,height. See the
; A-Wing's shield display for an example.
;
; You can press Ctrl+Alt+L to reload this file and apply changes. However, to load new cover textures you'll
; have to quit the current mission and reload it -- but you don't have to close XWA at all. You can press
; Ctrl+Alt+L to reload these settings while in the Concourse, the menu, or while in-flight (but not when loading
; a mission).
;
; Notes regarding the cover textures:
;
; You can make your own cover textures by exporting textures with XwaOptEditor and then making transparency
; holes in them with the editor of your choice. See the examples provided.
;
; If your new cover texture looks too dark with respect to the rest of the cockpit, then your cockpit may
; not have the proper illumination and the OPT may have to be fixed. Some cockpits have fully-illuminated
; interiors that are always bright regardless of the external light sources, while all cover textures react
; to light sources by default.

; Available Source Names (use these labels with the uv_coords command):
; LEFT_SENSOR_SRC
; RIGHT_SENSOR_SRC
; LASER_RECHARGE_SRC
; SHIELD_RECHARGE_SRC
; ENGINE_POWER_SRC
; BEAM_RECHARGE_SRC
; SHIELDS_SRC
; BEAM_LEVEL_SRC
; TARGETING_COMPUTER_SRC
; QUAD_LASERS_LEFT_SRC
; QUAD_LASERS_RIGHT_SRC
; LEFT_TEXT_BOX_SRC
; RIGHT_TEXT_BOX_SRC
; SPEED_THROTTLE_SRC
; MISSILES_SRC
; NAME_TIME_SRC
; NUM_SHIPS_SRC
; QUAD_LASERS_BOTH_SRC
; DUAL_LASERS_L_SRC
; DUAL_LASERS_R_SRC
; DUAL_LASERS_BOTH_SRC
; B_WING_LASERS_SRC
; SIX_LASERS_BOTH_SRC
; SIX_LASERS_L_SRC
; SIX_LASERS_R_SRC
; SHIELDS_FRONT_SRC -- Front shields numeric percentage
; SHIELDS_BACK_SRC -- Front shields numeric percentage
; KW_TEXT_CMD_SRC -- Added for compatibility with korekwerner's cockpits.
; KW_TEXT_TOP_SRC -- Added for compatibility with korekwerner's cockpits.
; KW_TEXT_RADIOSYS_SRC -- Added for compatibility with korekwerner's cockpits.
; TEXT_RADIO_SRC
; TEXT_SYSTEM_SRC
; TEXT_CMD_SRC
; The following are sub-elements of the Targeting Computer:
; TARGETED_OBJ_NAME_SRC
; TARGETED_OBJ_SHD_SRC
; TARGETED_OBJ_HULL_SRC
; TARGETED_OBJ_CARGO_SRC
; TARGETED_OBJ_SYS_SRC
; TARGETED_OBJ_DIST_SRC
; TARGETED_OBJ_SUBCMP_SRC

; Available HUD regions (use these labels with the erase_region command):
; 1. LEFT_SENSOR_REGION
; 2. RIGHT_SENSOR_REGION
; 3. SHIELDS_REGION
; 4. BEAM_REGION
; 5. TARGET_AND_LASERS_REGION
; 6. LEFT_TEXT_BOX_REGION
; 7. RIGHT_TEXT_BOX_REGION
; 8. TOP_LEFT_REGION
; 9. TOP_RIGHT_REGION
; 10. TEXT_RADIOSYS_REGION
; 11. TEXT_CMD_REGION



